{"version":3,"sources":["SocketContext.js","components/Notifications.jsx","components/Options.jsx","components/VideoPlayer.jsx","App.jsx","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","Notifications","useContext","Container","Row","className","Col","xs","Button","varient","onClick","class","Options","idToCall","setIdToCall","idCopied","setIdCopied","md","Form","Control","as","rows","placeholder","onChange","e","target","text","onCopy","variant","VideoPlayer","CallEnded","Card","Header","Body","playsInline","muted","ref","autoPlay","App","fluid","sm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.219caae0.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\n//const socket = io('http://localhost:5000');\r\nconst socket = io('https://server-for-meetvax.herokuapp.com/');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [name, setName] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [me, setMe] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n\r\n                myVideo.current.srcObject = currentStream;\r\n            });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n        });\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n        }}\r\n        >\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport { Button, Row, Col, Container } from 'react-bootstrap';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\n\r\nfunction Notifications() {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n    return (\r\n        <Container>\r\n            {\r\n                call.isReceivingCall && !callAccepted && (\r\n                    <Row className=\"m-2\">\r\n                        <Col xs={6}>\r\n                            <h4>{call.name} is calling..</h4>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Button varient=\"success\" className=\"p-1\" onClick={answerCall}>\r\n                                <i class=\"bi bi-telephone-inbound\"></i> &nbsp;\r\n                                Receive\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Notifications;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { SocketContext } from '../SocketContext';\r\n\r\n\r\nfunction Options({ children }) {\r\n    const { me, callAccepted, callEnded, name, setName, leaveCall, callUser } = useContext(SocketContext);\r\n    const [idToCall, setIdToCall] = useState('');\r\n    const [idCopied, setIdCopied] = useState(false);\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={4} className=\"offset-md-2\">\r\n                        <Form>\r\n                            <h3>Account Info</h3>\r\n                            <Form.Control className={idCopied ? \"d-none\" : \"\"} as=\"textarea\" rows={1} value={name} placeholder=\"Enter your name\" onChange={(e) => { setName(e.target.value) }} />\r\n                            <CopyToClipboard text={me} onCopy={() => { setIdCopied(true); }}>\r\n                                <Button variant={idCopied ? \"secondary\" : \"primary\"} className=\"mt-1\">\r\n                                    {\r\n                                        idCopied ? <div><i className=\"bi bi-clipboard\"></i> &nbsp; <span>Copied</span></div> : <div><i class=\"bi bi-clipboard-check\"></i> &nbsp; <span>Copy ID</span></div>\r\n                                    }\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col xs={12} md={4}>\r\n                        <Form>\r\n                            <h3>Make a call</h3>\r\n                            <Form.Control as=\"textarea\" rows={1} value={idToCall} placeholder=\"Paste friend's ID\" onChange={(e) => { setIdToCall(e.target.value) }} />\r\n                            {\r\n                                callAccepted && !callEnded ? (\r\n                                    <Button variant=\"danger\" className=\"mt-1\" onClick={leaveCall}>\r\n                                        <i className=\"bi bi-telephone-x\"></i> &nbsp;\r\n                                        Hang up\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button variant=\"success\" className=\"mt-1\" onClick={() => callUser(idToCall)}>\r\n                                        <i className=\"bi bi-telephone-outbound\"></i> &nbsp;\r\n                                        Call\r\n                                    </Button>\r\n                                )\r\n                            }\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col xs={6}>\r\n                        {children}\r\n                    </Col>\r\n                </Row>\r\n            </Container >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Options;\r\n","import React, { useContext } from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nfunction VideoPlayer() {\r\n    const { name, call, stream, myVideo, userVideo, callAccepted, CallEnded } = useContext(SocketContext);\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                {/* my video */}\r\n                <Col xs={12} md={6}>\r\n                    {\r\n                        stream && (\r\n                            <Card>\r\n                                <Card.Header>{name || 'You'}</Card.Header>\r\n                                <Card.Body className=\"p-0\">\r\n                                    <video className=\"h-100 w-100\" playsInline muted ref={myVideo} autoPlay />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    }\r\n                </Col>\r\n                {/* user's video */}\r\n                {\r\n                    callAccepted && !CallEnded && (\r\n                        <Col xs={12} md={(callAccepted && !CallEnded) ? 6 : 12}>\r\n                            <Card>\r\n                                <Card.Header>{call.name || 'Person'}</Card.Header>\r\n                                <Card.Body className=\"p-0\">\r\n                                    <video className=\"h-100 w-100\" playsInline ref={userVideo} autoPlay />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                }\r\n\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import React from 'react';\r\nimport { Container, Card, Row, Col } from 'react-bootstrap';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\nimport VideoPlayer from './components/VideoPlayer';\r\n\r\nexport default function App() {\r\n    return (\r\n        <Container fluid className=\"bg-light p-1\">\r\n            <Card.Header className=\"bg-primary text-light m-0\">\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col sm={1}>\r\n                        <h1>MeetVAx</h1>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body className=\"bg-light text-dark m-0 mt-1\">\r\n                <VideoPlayer />\r\n                <Options>\r\n                    <Notifications />\r\n                </Options>\r\n            </Card.Body>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ContextProvider } from './SocketContext';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\nimport App from './App';\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}